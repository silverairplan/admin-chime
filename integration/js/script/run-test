#!/bin/bash -i

function start_demo_meeting {
    if [[ $1 == "videoTestApp" ]]; then
      cd $GITHUB_WORKSPACE/integration/js/app
    elif [[ $stem = "" ]]; then
      cd $GITHUB_WORKSPACE/demos/browser
    fi
    uuid=$(uuidgen)
    mkdir -p logs
    case $1 in
      'meetingReadinessChecker')
        extra_args='--app=meetingReadinessChecker'
        echo "Starting meeting readiness checker"
        ;;
      'meetingSession')
        extra_args='--app=messagingSession'
        echo "Starting messaging session demo"
        ;;
      'videoTestApp')
        echo "Starting the video integration test app"
        ;;
      *)
        echo "Starting the meeting demo"
        ;;
    esac
    npm run start $extra_args 2>&1 | tee -a logs/$uuid.log &
}

function did_server_start {
    if ! lsof -i:$1 > /dev/null; then
        echo 0
    else
        echo 1
    fi
}

function wait_for_demo_to_start {
    echo "Waiting for the demo to start"
    threshold=60
    started=0
    retry_count=1
    while [ $started -eq 0 ] && [ $retry_count -lt $threshold ]
    do
      started=$(did_server_start $1)
      sleep 5
      retry_count=$(($retry_count+1))
    done

    if [ $retry_count -eq $threshold ]; then
     echo "meeting demo not started"
     exit 1
    fi
}

echo `pwd`
curr=`pwd`

case $1 in
  video_test_app)
    start_demo_meeting 'videoTestApp'
    ;;
  meeting_readiness_checker)
    start_demo_meeting 'meetingReadinessChecker'
    ;;
  messaging)
    start_demo_meeting 'meetingSession'
    ;;
  *)
    start_demo_meeting
    ;;
esac

wait_for_demo_to_start 8080
cd $curr
cd ../
. ~/.bashrc

case $1 in
   audio)
      r audio_test.config.json
      r app_quit_audio_test.config.json
      r meeting_leave_audio_test.config.json
      ;;
   video)
      r video_test.config.json
      r video_test_processor.config.json
      #  TODO: Re-enable simulcast test after it has been fixed
      # r video_test_simulcast.config.json
      r app_quit_video_test.config.json
      r meeting_leave_video_test.config.json
      r reconnection_test.config.json
      ;;
   video_test_app)
      r test_app_video_test.config.json
      r test_app_video_pin_test.config.json
      ;;
   meeting_end)
      r meeting_end_test.config.json
      ;;
   content_share)
      r content_share_screen_capture_test.config.json
      r content_share_only_allow_two_test.config.json
      r content_share_join_later_test.config.json
      r app_quit_content_share_test.config.json
      r meeting_leave_content_share_test.config.json
      r content_share_video_test.config.json
      ;;
   data_message)
      r data_message_test.config.json
      ;;
   meeting_readiness_checker)
      r meeting_readiness_checker_test.config.json
      ;;
   messaging)
      r messaging_session_test.config.json
      ;;
   *)
      r audio_test.config.json
      r video_test.config.json
      r meeting_end_test.config.json
      r app_quit_audio_test.config.json
      r app_quit_video_test.config.json
      r meeting_leave_audio_test.config.json
      r meeting_leave_video_test.config.json
      ;;
esac

#Kill the current local demo process
kill -9 $(lsof -i:8080 | grep LISTEN | awk '{print $2}')

./js/script/failure-check